{
	"$schema": "http://json-schema.org/draft-07/schema",
	"title": "Advancement",
	"additionalProperties": false,
	"properties": {
		"display": {
			"description": "The optional display data.",
			"additionalProperties": false,
			"properties": {
				"icon": {
					"description": "The data for the icon.",
					"additionalProperties": false,
					"properties": {
						"item": {
							"description": "The item id.",
							"type": "string" // TODO ITEM_IDENTIFIER
						},
						"nbt": {
							"description": "The nbt data of the item."
							// TODO NBT_DATA
						}
					}
				},
				"title": {
					"anyOf": [
						{
							"description": "The title for this advancement.",
							"type": "string"
						},
						{
							"description": "A JSON text component containing text and formatting like used in /tellraw and various other commands.",
							"type": "object" // TODO JSON_TEXT_COMPONENT
						}
					]
				},
				"frame": {
					"description": "The optional type of frame for the icon.\n'challenge' - For a tile with a more fancy spiked border as it is used for the kill all mobs advancement.\n'goal' - For a tile with a rounded border as it is used for the full beacon advancement.\n'task' - For a normal tile (default)",
					"type": "string",
					"enum": ["challenge", "goal", "task"]
				},
				"background": {
					"description": "The optional directory directory for the background to use in this advancement tab (used only for root advancement).",
					"type": "string" // TODO TEXTURE_PATH
				},
				"description": {
					"anyOf": [
						{
							"description": "The description of this advancement.",
							"type": "string"
						},
						{
							"description": "A JSON text component containing text and formatting like used in /tellraw and various other commands.",
							"type": "object" // TODO JSON_TEXT_COMPONENT
						}
					]
				},
				"show_toast": {
					"description": "Whether or not to show the toast pop up after completing this advancement. Defaults to true.",
					"type": "boolean"
				},
				"announce_to_chat": {
					"description": "Whether or not to announce in the chat when this advancement has been completed. Defaults to true.",
					"type": "boolean"
				},
				"hidden": {
					"description": "Whether or not to hide this advancement and all its children from the advancement screen until this advancement have been completed. Has no effect on root advancements themselves, but still affects all their children. Defaults to false.",
					"type": "boolean"
				}
			}
		},
		"parent": {
			"description": "The optional parent advancement directory of this advancement. If this field is absent, this advancement is a root advancement. Circular references cause a loading failure.",
			"type": "string" // TODO ADVANCEMENT_NAME
		},
		"criteria": {
			"description": "The required criteria that have to be met.",
			"patternProperties": {
				".*": {
					"allOf": [
						{
							"properties": {
								"trigger": {
									"description": "The trigger for this advancement; specifies what the game should check for the advancement.",
									"$ref": "./general/trigger.json"
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:bee_nest_destroyed"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"block": {
												"description": "The block that was destroyed.",
												"type": "string" // TODO BLOCK_IDENTIFIER
											},
											"item": {
												"description": "The item used to break the block.",
												"type": "object" // TODO ITEM
											},
											"num_bees_inside": {
												"description": "The number of bees that were inside the bee nest/beehive before it was broken.",
												"type": "integer"
											},
											"player": {
												"type": "array",
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"items": {
													"type": "string" // TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:bred_animals"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"child": {
												"description": " The child that results from the breeding. May also be a list of predicates that must pass in order for the trigger to activate.",
												"type": "array",
												"items": {
													"anyOf": [
														{
															"type": "string" // TODO PREDICATES
														},
														{
															"type": "object" // TODO ENTITY
														}
													]
												}
											},
											"parent": {
												"description": "The parent. May also be a list of predicates that must pass in order for the trigger to activate.",
												"type": "array",
												"items": {
													"anyOf": [
														{
															"type": "string" // TODO PREDICATES
														},
														{
															"type": "object" // TODO ENTITY
														}
													]
												}
											},
											"partner": {
												"description": "The partner. (The entity the parent was bred with) May also be a list of predicates that must pass in order for the trigger to activate.",
												"type": "array",
												"items": {
													"anyOf": [
														{
															"type": "string" // TODO PREDICATES
														},
														{
															"type": "object" // TODO ENTITY
														}
													]
												}
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													"type": "string" // TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:brewed_potion"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"potion": {
												"description": "A brewed potion ID.",
												"type": "string" // TODO POTION_ID
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													"type": "string" // TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:changed_dimension"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"from": {
												"description": "The dimension the entity traveled from.",
												"type": "string",
												"enum": [
													"minecraft:overworld",
													"minecraft:the_nether",
													"minecraft:the_end"
												]
											},
											"to": {
												"description": "The dimension the entity traveled to.",
												"type": "string",
												"enum": [
													"minecraft:overworld",
													"minecraft:the_nether",
													"minecraft:the_end"
												]
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													"type": "string" // TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:channeled_lightning"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"victims": {
												"description": "The victims hit by the lightning summoned by the Channeling enchantment. All entities in this list must be hit. Each entry may also be a list of predicates that must pass in order for the trigger to activate. The checks are applied to the victim hit by the enchanted trident.",
												"type": "array",
												"items": {
													"$ref": "./general/entityProperties.json"
												}
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													// TODO PREDICATE
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:construct_beacon"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"level": {
												"anyOf": [
													{
														"type": "integer"
													},
													{
														"properties": {
															"max": {
																"type": "integer"
															},
															"min": {
																"type": "integer"
															}
														}
													}
												]
											},
											"player": {
												"type": "array",
												"items": {
													// TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:consume_item"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"item": {
												"description": "The item that was consumed.",
												"$ref": "./general/itemProperties.json"
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													// TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:cured_zombie_villager"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"villager": {
												"anyOf": [
													{
														"$ref": "./general/entityProperties.json"
													},
													{
														"type": "array",
														"items": {
															"$ref": "./general/entityProperties.json"
														}
													}
												]
											},
											"zombie": {
												"anyOf": [
													{
														"$ref": "./general/entityProperties.json"
													},
													{
														"type": "array",
														"items": {
															"$ref": "./general/entityProperties.json"
														}
													}
												]
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													// TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:effects_changed"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											"effects": {
												"description": "A list of status effects the player has.",
												"propertyNames": {
													// TODO EFFECT_NAME
												},
												"patternProperties": {
													".+": {
														"description": "A status effect with the key name being the status effect name.",
														"properties": {
															"amplifier": {
																"description": "The effect amplifier.",
																"anyOf": [
																	{
																		"type": "integer"
																	},
																	{
																		"properties": {
																			"max": {
																				"type": "integer"
																			},
																			"min": {
																				"type": "integer"
																			}
																		}
																	}
																]
															},
															"duration": {
																"description": "The effect duration in ticks.",
																"anyOf": [
																	{
																		"type": "integer"
																	},
																	{
																		"properties": {
																			"max": {
																				"type": "integer"
																			},
																			"min": {
																				"type": "integer"
																			}
																		}
																	}
																]
															}
														}
													}
												}
											},
											"player": {
												"description": "A list of predicates that must pass in order for the trigger to activate. The checks are applied to the player that would get the advancement.",
												"type": "array",
												"items": {
													// TODO PREDICATES
												}
											}
										}
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"trigger": {
										"const": "minecraft:enchanted_item"
									}
								}
							},
							"then": {
								"properties": {
									"conditions": {
										"properties": {
											// TODO
										}
									}
								}
							}
						}
					]
				}
			}
		},
		"requirements": {
			"description": "An optional list of requirements. If all criteria are required, this may be omitted. With multiple criteria: requirements contains a list of lists with criteria (all criteria need to be mentioned). If all of the lists each have any criteria met, the advancement is complete. (basically AND grouping of OR groups)",
			"type": "array",
			"items": {
				"type": "string"
				// TODO CRITERIA_NAMES
			}
		},
		"rewards": {
			"description": "An optional object representing the rewards provided when this advancement is obtained.",
			"additionalProperties": false,
			"properties": {
				"recipes": {
					"description": "A list of recipes to unlock.",
					"type": "array",
					"items": {
						"description": "A namespaced ID for a recipe.",
						"type": "string"
						// TODO RECIPE_ID
					}
				},
				"loot": {
					"description": "A list of loot tables to give to the player.",
					"type": "array",
					"items": {
						"description": "A namespaced ID for a loot table.",
						"type": "string"
						// TODO LOOT_TABLE_ID
					}
				},
				"experience": {
					"description": "An amount of experience.",
					"type": "integer"
				},
				"function": {
					"description": "A function to run. Function tags are not allowed."
				}
			}
		}
	}
}
